Index: lib/views/auth/login_screen.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:flutter/material.dart';\r\nimport 'package:medicall/utilities/extensions.dart';\r\n\r\nimport '../../constants/images.dart';\r\n\r\nclass LoginScreen extends StatefulWidget {\r\n  const LoginScreen({super.key});\r\n\r\n  @override\r\n  State<LoginScreen> createState() => _LoginScreenState();\r\n}\r\n\r\nclass _LoginScreenState extends State<LoginScreen> {\r\n  bool isObscure = true;\r\n\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    final size = context.mediaQuerySize;\r\n    return Scaffold(\r\n      body: SafeArea(\r\n        child: Container(\r\n          width: size.width,\r\n          height: size.height,\r\n          decoration: const BoxDecoration(\r\n              gradient: LinearGradient(\r\n                  begin: Alignment(0.5, 0),\r\n                  end: Alignment(0.5, 1),\r\n                  colors: [\r\n                Color(0XFF00306D),\r\n                Color(0XFF002556),\r\n                Color(0XFF00204A)\r\n              ])),\r\n          child: Form(\r\n            child: Column(\r\n              children: [\r\n                Image.asset(ImageConstant.imgLogo),\r\n                const SizedBox(height: 50),\r\n                Padding(\r\n                  padding: const EdgeInsets.symmetric(horizontal: 16.0),\r\n                  child: Column(\r\n                    children: [\r\n                      TextFormField(\r\n                        textInputAction: TextInputAction.next,\r\n                        keyboardType: TextInputType.emailAddress,\r\n                        enableSuggestions: true,\r\n                        decoration: InputDecoration(\r\n                          //label\r\n                          labelText: 'Email',\r\n                          labelStyle: const TextStyle(\r\n                            color: Colors.blueGrey,\r\n                            fontSize: 20,\r\n                            fontWeight: FontWeight.w500,\r\n                          ),\r\n                          suffixIcon: const Icon(Icons.email),\r\n                          floatingLabelBehavior: FloatingLabelBehavior.never,\r\n                          fillColor: Colors.white,\r\n                          filled: true,\r\n                          enabledBorder: OutlineInputBorder(\r\n                            borderRadius: BorderRadius.circular(30),\r\n                            borderSide:\r\n                                const BorderSide(color: Colors.black, width: 2),\r\n                          ),\r\n                          focusedBorder: OutlineInputBorder(\r\n                            borderRadius: BorderRadius.circular(30),\r\n                            borderSide:\r\n                                const BorderSide(color: Colors.black, width: 2),\r\n                          ),\r\n                        ),\r\n                        onTapOutside: (event) =>\r\n                            FocusScope.of(context).unfocus(),\r\n                      ),\r\n                      const SizedBox(height: 20),\r\n                      TextFormField(\r\n                        textInputAction: TextInputAction.done,\r\n                        keyboardType: TextInputType.visiblePassword,\r\n                        enableSuggestions: false,\r\n                        autocorrect: false,\r\n                        obscureText: isObscure,\r\n                        obscuringCharacter: '*',\r\n                        decoration: InputDecoration(\r\n                          //label\r\n                          labelText: 'Password',\r\n                          labelStyle: const TextStyle(\r\n                            color: Colors.blueGrey,\r\n                            fontSize: 20,\r\n                            fontWeight: FontWeight.w500,\r\n                          ),\r\n                          suffixIcon: IconButton(\r\n                            onPressed: () {\r\n                              setState(() {\r\n                                isObscure = !isObscure;\r\n                              });\r\n                            },\r\n                            style: IconButton.styleFrom(\r\n                              minimumSize: const Size(48, 48),\r\n                            ),\r\n                            icon: Icon(\r\n                              isObscure\r\n                                  ? Icons.visibility_off_outlined\r\n                                  : Icons.visibility_outlined,\r\n                              color: Colors.black,\r\n                            ),\r\n                          ),\r\n                          floatingLabelBehavior: FloatingLabelBehavior.never,\r\n                          fillColor: Colors.white,\r\n                          filled: true,\r\n                          enabledBorder: OutlineInputBorder(\r\n                            borderRadius: BorderRadius.circular(30),\r\n                            borderSide:\r\n                                const BorderSide(color: Colors.black, width: 2),\r\n                          ),\r\n                          focusedBorder: OutlineInputBorder(\r\n                            borderRadius: BorderRadius.circular(30),\r\n                            borderSide:\r\n                                const BorderSide(color: Colors.black, width: 2),\r\n                          ),\r\n                        ),\r\n                        onTapOutside: (event) =>\r\n                            FocusScope.of(context).unfocus(),\r\n                      ),\r\n                    ],\r\n                  ),\r\n                )\r\n              ],\r\n            ),\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/views/auth/login_screen.dart b/lib/views/auth/login_screen.dart
--- a/lib/views/auth/login_screen.dart	(revision d5774563c123c17a5eb27caaafa39ae8768c4464)
+++ b/lib/views/auth/login_screen.dart	(date 1699106566689)
@@ -1,8 +1,11 @@
 import 'package:flutter/material.dart';
+import 'package:medicall/components/custom_text_form_field.dart';
 import 'package:medicall/utilities/extensions.dart';
 
 import '../../constants/images.dart';
 
+final _formKey = GlobalKey<FormState>();
+
 class LoginScreen extends StatefulWidget {
   const LoginScreen({super.key});
 
@@ -11,116 +14,105 @@
 }
 
 class _LoginScreenState extends State<LoginScreen> {
+  //TODO: Add controller
+  TextEditingController emailController = TextEditingController();
+  TextEditingController passwordController = TextEditingController();
   bool isObscure = true;
 
-
   @override
   Widget build(BuildContext context) {
     final size = context.mediaQuerySize;
     return Scaffold(
-      body: SafeArea(
-        child: Container(
-          width: size.width,
-          height: size.height,
-          decoration: const BoxDecoration(
-              gradient: LinearGradient(
-                  begin: Alignment(0.5, 0),
-                  end: Alignment(0.5, 1),
-                  colors: [
-                Color(0XFF00306D),
-                Color(0XFF002556),
-                Color(0XFF00204A)
-              ])),
+      body: Container(
+        width: size.width,
+        height: size.height,
+        decoration: const BoxDecoration(
+            gradient: LinearGradient(
+                begin: Alignment(0.5, 0),
+                end: Alignment(0.5, 1),
+                colors: [
+              Color(0XFF00306D),
+              Color(0XFF002556),
+              Color(0XFF00204A)
+            ])),
+        child: Padding(
+          padding: const EdgeInsets.symmetric(horizontal: 16.0),
           child: Form(
+            key: _formKey,
             child: Column(
               children: [
                 Image.asset(ImageConstant.imgLogo),
                 const SizedBox(height: 50),
-                Padding(
-                  padding: const EdgeInsets.symmetric(horizontal: 16.0),
-                  child: Column(
-                    children: [
-                      TextFormField(
-                        textInputAction: TextInputAction.next,
-                        keyboardType: TextInputType.emailAddress,
-                        enableSuggestions: true,
-                        decoration: InputDecoration(
-                          //label
-                          labelText: 'Email',
-                          labelStyle: const TextStyle(
-                            color: Colors.blueGrey,
-                            fontSize: 20,
-                            fontWeight: FontWeight.w500,
-                          ),
-                          suffixIcon: const Icon(Icons.email),
-                          floatingLabelBehavior: FloatingLabelBehavior.never,
-                          fillColor: Colors.white,
-                          filled: true,
-                          enabledBorder: OutlineInputBorder(
-                            borderRadius: BorderRadius.circular(30),
-                            borderSide:
-                                const BorderSide(color: Colors.black, width: 2),
-                          ),
-                          focusedBorder: OutlineInputBorder(
-                            borderRadius: BorderRadius.circular(30),
-                            borderSide:
-                                const BorderSide(color: Colors.black, width: 2),
-                          ),
-                        ),
-                        onTapOutside: (event) =>
-                            FocusScope.of(context).unfocus(),
-                      ),
-                      const SizedBox(height: 20),
-                      TextFormField(
-                        textInputAction: TextInputAction.done,
-                        keyboardType: TextInputType.visiblePassword,
-                        enableSuggestions: false,
-                        autocorrect: false,
-                        obscureText: isObscure,
-                        obscuringCharacter: '*',
-                        decoration: InputDecoration(
-                          //label
-                          labelText: 'Password',
-                          labelStyle: const TextStyle(
-                            color: Colors.blueGrey,
-                            fontSize: 20,
-                            fontWeight: FontWeight.w500,
-                          ),
-                          suffixIcon: IconButton(
-                            onPressed: () {
-                              setState(() {
-                                isObscure = !isObscure;
-                              });
-                            },
-                            style: IconButton.styleFrom(
-                              minimumSize: const Size(48, 48),
-                            ),
-                            icon: Icon(
-                              isObscure
-                                  ? Icons.visibility_off_outlined
-                                  : Icons.visibility_outlined,
-                              color: Colors.black,
-                            ),
-                          ),
-                          floatingLabelBehavior: FloatingLabelBehavior.never,
-                          fillColor: Colors.white,
-                          filled: true,
-                          enabledBorder: OutlineInputBorder(
-                            borderRadius: BorderRadius.circular(30),
-                            borderSide:
-                                const BorderSide(color: Colors.black, width: 2),
-                          ),
-                          focusedBorder: OutlineInputBorder(
-                            borderRadius: BorderRadius.circular(30),
-                            borderSide:
-                                const BorderSide(color: Colors.black, width: 2),
-                          ),
-                        ),
-                        onTapOutside: (event) =>
-                            FocusScope.of(context).unfocus(),
-                      ),
-                    ],
-                  ),
+                Column(
+                  children: [
+                    //Input Email
+                    CustomTextFormField(
+                      textInputAction: TextInputAction.next,
+                      labelText: 'Email',
+                      keyboardType: TextInputType.emailAddress,
+                      suffixIcon: const Padding(
+                        padding: EdgeInsets.only(right: 20.0),
+                        child: Icon(
+                          Icons.email,
+                        ),
+                      ),
+                      controller: emailController,
+                      validator: (value) {
+                        if (value == null || value.isEmpty) {
+                          return 'Inserire del testo';
+                        }
+                        return null;
+                      },
+                    ),
+                    SizedBox(height: size.height * 0.02),
+                    //Input Password
+                    CustomTextFormField(
+                      textInputAction: TextInputAction.done,
+                      labelText: 'Password',
+                      keyboardType: TextInputType.visiblePassword,
+                      obscureText: isObscure,
+                      suffixIcon: IconButton(
+                        onPressed: () {
+                          setState(() {
+                            isObscure = !isObscure;
+                          });
+                        },
+                        style: IconButton.styleFrom(
+                          padding: EdgeInsets.zero,
+                        ),
+                        icon: Padding(
+                          padding: const EdgeInsets.only(right: 20.0),
+                          child: Icon(
+                            isObscure
+                                ? Icons.visibility_off_outlined
+                                : Icons.visibility_outlined,
+                            color: Colors.black,
+                          ),
+                        ),
+                      ),
+                      controller: passwordController,
+                      validator: null, //TODO: Add validator
+                    ),
+                    const SizedBox(height: 20),
+                    ElevatedButton(
+                      style: ElevatedButton.styleFrom(
+                        backgroundColor: Colors.white,
+                        foregroundColor: Colors.black,
+                        fixedSize:
+                            Size(size.width * 0.85, size.height * 0.06),
+                      ),
+                      onPressed: () {
+                        if (_formKey.currentState!.validate()) {
+                          ScaffoldMessenger.of(context).showSnackBar(
+                            const SnackBar(
+                              content: Text('Fatto!'),
+                            ),
+                          );
+                        }
+                      },
+                      child: const Text('ACCEDI'),
+                    ),
+                  ],
                 )
               ],
             ),
Index: lib/main.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:flutter/material.dart';\r\nimport 'package:medicall/views/auth/login_screen.dart';\r\nimport 'package:medicall/views/splash_screen.dart';\r\n\r\nvoid main() {\r\n  WidgetsFlutterBinding.ensureInitialized();\r\n  runApp(MyApp());\r\n}\r\n\r\nclass MyApp extends StatelessWidget {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return MaterialApp(\r\n      title: 'MediCall',\r\n      debugShowCheckedModeBanner: false,\r\n      theme: ThemeData(\r\n        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),\r\n        useMaterial3: true,\r\n      ),\r\n      home: LoginScreen(),\r\n    );\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/main.dart b/lib/main.dart
--- a/lib/main.dart	(revision d5774563c123c17a5eb27caaafa39ae8768c4464)
+++ b/lib/main.dart	(date 1699097327447)
@@ -17,7 +17,7 @@
         colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
         useMaterial3: true,
       ),
-      home: LoginScreen(),
+      home: const LoginScreen(),
     );
   }
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"319b905b-128b-41c1-bf19-d7f8bb000158\" name=\"Changes\" comment=\"Aggiunta animazione e inizio scrittura login\">\r\n      <change beforePath=\"$PROJECT_DIR$/.dart_tool/flutter_build/56ba2a258a5427ee20a056864de7ec3e/.filecache\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.dart_tool/flutter_build/56ba2a258a5427ee20a056864de7ec3e/.filecache\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.dart_tool/flutter_build/56ba2a258a5427ee20a056864de7ec3e/app.dill\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.dart_tool/flutter_build/56ba2a258a5427ee20a056864de7ec3e/app.dill\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.dart_tool/flutter_build/56ba2a258a5427ee20a056864de7ec3e/debug_android_application.stamp\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.dart_tool/flutter_build/56ba2a258a5427ee20a056864de7ec3e/debug_android_application.stamp\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.dart_tool/flutter_build/56ba2a258a5427ee20a056864de7ec3e/flutter_assets.d\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.dart_tool/flutter_build/56ba2a258a5427ee20a056864de7ec3e/flutter_assets.d\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.dart_tool/flutter_build/56ba2a258a5427ee20a056864de7ec3e/kernel_snapshot.d\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.dart_tool/flutter_build/56ba2a258a5427ee20a056864de7ec3e/kernel_snapshot.d\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.dart_tool/flutter_build/56ba2a258a5427ee20a056864de7ec3e/kernel_snapshot.stamp\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.dart_tool/flutter_build/56ba2a258a5427ee20a056864de7ec3e/kernel_snapshot.stamp\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/.gradle/7.5/executionHistory/executionHistory.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/.gradle/7.5/executionHistory/executionHistory.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/.gradle/7.5/executionHistory/executionHistory.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/.gradle/7.5/executionHistory/executionHistory.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/.gradle/7.5/fileHashes/fileHashes.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/.gradle/7.5/fileHashes/fileHashes.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/.gradle/7.5/fileHashes/fileHashes.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/.gradle/7.5/fileHashes/fileHashes.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/android/.gradle/buildOutputCleanup/buildOutputCleanup.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/android/.gradle/buildOutputCleanup/buildOutputCleanup.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/a46f85df11ed3d278105635939097b84.cache.dill.track.dill\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/build/a46f85df11ed3d278105635939097b84.cache.dill.track.dill\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/app/intermediates/assets/debug/flutter_assets/kernel_blob.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/build/app/intermediates/assets/debug/flutter_assets/kernel_blob.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/app/intermediates/compressed_assets/debug/out/assets/flutter_assets/kernel_blob.bin.jar\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/build/app/intermediates/compressed_assets/debug/out/assets/flutter_assets/kernel_blob.bin.jar\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/app/intermediates/flutter/debug/flutter_assets/kernel_blob.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/build/app/intermediates/flutter/debug/flutter_assets/kernel_blob.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/app/intermediates/flutter/debug/flutter_build.d\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/build/app/intermediates/flutter/debug/flutter_build.d\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/app/intermediates/incremental/packageDebug/tmp/debug/dex-renamer-state.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/build/app/intermediates/incremental/packageDebug/tmp/debug/dex-renamer-state.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/app/outputs/apk/debug/app-debug.apk\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/build/app/outputs/apk/debug/app-debug.apk\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/app/outputs/flutter-apk/app-debug.apk\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/build/app/outputs/flutter-apk/app-debug.apk\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/app/outputs/flutter-apk/app-debug.apk.sha1\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/build/app/outputs/flutter-apk/app-debug.apk.sha1\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/lib/main.dart\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/lib/main.dart\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/lib/views/auth/login_screen.dart\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/lib/views/auth/login_screen.dart\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Dart File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;customColor&quot;: &quot;&quot;,\r\n  &quot;associatedIndex&quot;: 0\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2XUNBwovI3gP33gzEgScIM6RtBW\" />\r\n  <component name=\"ProjectReloadState\">\r\n    <option name=\"STATE\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;dart.analysis.tool.window.visible&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;io.flutter.reload.alreadyRun&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/dev/projects/medicall/lib/assets/images&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;SDKs&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;com.github.copilot.settings.ApplicationConfigurable&quot;,\r\n    &quot;show.migrate.to.gradle.popup&quot;: &quot;false&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\dev\\projects\\medicall\\lib\\assets\\images\" />\r\n      <recent name=\"C:\\dev\\projects\\medicall\\lib\\views\" />\r\n      <recent name=\"C:\\dev\\projects\\medicall\\lib\\views\\auth\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\dev\\projects\\medicall\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main.dart\" type=\"FlutterRunConfigurationType\" factoryName=\"Flutter\">\r\n      <option name=\"filePath\" value=\"$PROJECT_DIR$/lib/main.dart\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"319b905b-128b-41c1-bf19-d7f8bb000158\" name=\"Changes\" comment=\"\" />\r\n      <created>1698679576725</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1698679576725</updated>\r\n      <workItem from=\"1698679589013\" duration=\"522000\" />\r\n      <workItem from=\"1698680411107\" duration=\"473000\" />\r\n      <workItem from=\"1698681000419\" duration=\"441000\" />\r\n      <workItem from=\"1698681465787\" duration=\"594000\" />\r\n      <workItem from=\"1698745646873\" duration=\"16000\" />\r\n      <workItem from=\"1698747332837\" duration=\"844000\" />\r\n      <workItem from=\"1698753827853\" duration=\"295000\" />\r\n      <workItem from=\"1698770618633\" duration=\"21774000\" />\r\n      <workItem from=\"1698926671227\" duration=\"12528000\" />\r\n      <workItem from=\"1698953022204\" duration=\"3945000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Primo commit\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1698876774035</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1698876774035</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Schermata iniziale\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1698924762831</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1698924762831</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Aggiunta animazione e inizio scrittura login\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1698947019785</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1698947019785</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Primo commit\" />\r\n    <MESSAGE value=\"Schermata iniziale\" />\r\n    <MESSAGE value=\"Aggiunta animazione e inizio scrittura login\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Aggiunta animazione e inizio scrittura login\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision d5774563c123c17a5eb27caaafa39ae8768c4464)
+++ b/.idea/workspace.xml	(date 1699106566815)
@@ -4,19 +4,22 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="319b905b-128b-41c1-bf19-d7f8bb000158" name="Changes" comment="Aggiunta animazione e inizio scrittura login">
+    <list default="true" id="319b905b-128b-41c1-bf19-d7f8bb000158" name="Changes" comment="Creazione email e password textfield">
+      <change afterPath="$PROJECT_DIR$/lib/components/custom_text_form_field.dart" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.dart_tool/flutter_build/56ba2a258a5427ee20a056864de7ec3e/.filecache" beforeDir="false" afterPath="$PROJECT_DIR$/.dart_tool/flutter_build/56ba2a258a5427ee20a056864de7ec3e/.filecache" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.dart_tool/flutter_build/56ba2a258a5427ee20a056864de7ec3e/app.dill" beforeDir="false" afterPath="$PROJECT_DIR$/.dart_tool/flutter_build/56ba2a258a5427ee20a056864de7ec3e/app.dill" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.dart_tool/flutter_build/56ba2a258a5427ee20a056864de7ec3e/debug_android_application.stamp" beforeDir="false" afterPath="$PROJECT_DIR$/.dart_tool/flutter_build/56ba2a258a5427ee20a056864de7ec3e/debug_android_application.stamp" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.dart_tool/flutter_build/56ba2a258a5427ee20a056864de7ec3e/flutter_assets.d" beforeDir="false" afterPath="$PROJECT_DIR$/.dart_tool/flutter_build/56ba2a258a5427ee20a056864de7ec3e/flutter_assets.d" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.dart_tool/flutter_build/56ba2a258a5427ee20a056864de7ec3e/kernel_snapshot.d" beforeDir="false" afterPath="$PROJECT_DIR$/.dart_tool/flutter_build/56ba2a258a5427ee20a056864de7ec3e/kernel_snapshot.d" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.dart_tool/flutter_build/56ba2a258a5427ee20a056864de7ec3e/kernel_snapshot.stamp" beforeDir="false" afterPath="$PROJECT_DIR$/.dart_tool/flutter_build/56ba2a258a5427ee20a056864de7ec3e/kernel_snapshot.stamp" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/android/.gradle/7.5/executionHistory/executionHistory.bin" beforeDir="false" afterPath="$PROJECT_DIR$/android/.gradle/7.5/executionHistory/executionHistory.bin" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/android/.gradle/7.5/executionHistory/executionHistory.lock" beforeDir="false" afterPath="$PROJECT_DIR$/android/.gradle/7.5/executionHistory/executionHistory.lock" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/android/.gradle/7.5/fileHashes/fileHashes.bin" beforeDir="false" afterPath="$PROJECT_DIR$/android/.gradle/7.5/fileHashes/fileHashes.bin" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/android/.gradle/7.5/fileHashes/fileHashes.lock" beforeDir="false" afterPath="$PROJECT_DIR$/android/.gradle/7.5/fileHashes/fileHashes.lock" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/android/.gradle/buildOutputCleanup/buildOutputCleanup.lock" beforeDir="false" afterPath="$PROJECT_DIR$/android/.gradle/buildOutputCleanup/buildOutputCleanup.lock" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/android/.gradle/file-system.probe" beforeDir="false" afterPath="$PROJECT_DIR$/android/.gradle/file-system.probe" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/build/a46f85df11ed3d278105635939097b84.cache.dill.track.dill" beforeDir="false" afterPath="$PROJECT_DIR$/build/a46f85df11ed3d278105635939097b84.cache.dill.track.dill" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/build/app/intermediates/assets/debug/flutter_assets/kernel_blob.bin" beforeDir="false" afterPath="$PROJECT_DIR$/build/app/intermediates/assets/debug/flutter_assets/kernel_blob.bin" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/build/app/intermediates/compressed_assets/debug/out/assets/flutter_assets/kernel_blob.bin.jar" beforeDir="false" afterPath="$PROJECT_DIR$/build/app/intermediates/compressed_assets/debug/out/assets/flutter_assets/kernel_blob.bin.jar" afterDir="false" />
@@ -59,29 +62,29 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
-    &quot;dart.analysis.tool.window.visible&quot;: &quot;false&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
-    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
-    &quot;io.flutter.reload.alreadyRun&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/dev/projects/medicall/lib/assets/images&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
-    &quot;project.structure.last.edited&quot;: &quot;SDKs&quot;,
-    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
-    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;com.github.copilot.settings.ApplicationConfigurable&quot;,
-    &quot;show.migrate.to.gradle.popup&quot;: &quot;false&quot;,
-    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "WebServerToolWindowFactoryState": "false",
+    "dart.analysis.tool.window.visible": "false",
+    "git-widget-placeholder": "main",
+    "ignore.virus.scanning.warn.message": "true",
+    "io.flutter.reload.alreadyRun": "true",
+    "last_opened_file_path": "C:/dev/projects/medicall/lib/assets/images",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "project.structure.last.edited": "SDKs",
+    "project.structure.proportion": "0.15",
+    "project.structure.side.proportion": "0.2",
+    "settings.editor.selected.configurable": "preferences.keymap",
+    "show.migrate.to.gradle.popup": "false",
+    "vue.rearranger.settings.migration": "true"
   }
-}</component>
+}]]></component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="C:\dev\projects\medicall\lib\assets\images" />
@@ -115,7 +118,9 @@
       <workItem from="1698753827853" duration="295000" />
       <workItem from="1698770618633" duration="21774000" />
       <workItem from="1698926671227" duration="12528000" />
-      <workItem from="1698953022204" duration="3945000" />
+      <workItem from="1698953022204" duration="4044000" />
+      <workItem from="1699005290716" duration="1374000" />
+      <workItem from="1699093216736" duration="7016000" />
     </task>
     <task id="LOCAL-00001" summary="Primo commit">
       <option name="closed" value="true" />
@@ -141,7 +146,23 @@
       <option name="project" value="LOCAL" />
       <updated>1698947019785</updated>
     </task>
-    <option name="localTasksCounter" value="4" />
+    <task id="LOCAL-00004" summary="Creazione email e password textfield">
+      <option name="closed" value="true" />
+      <created>1698965583056</created>
+      <option name="number" value="00004" />
+      <option name="presentableId" value="LOCAL-00004" />
+      <option name="project" value="LOCAL" />
+      <updated>1698965583056</updated>
+    </task>
+    <task id="LOCAL-00005" summary="Creazione email e password textfield">
+      <option name="closed" value="true" />
+      <created>1698965607783</created>
+      <option name="number" value="00005" />
+      <option name="presentableId" value="LOCAL-00005" />
+      <option name="project" value="LOCAL" />
+      <updated>1698965607783</updated>
+    </task>
+    <option name="localTasksCounter" value="6" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -162,7 +183,8 @@
     <MESSAGE value="Primo commit" />
     <MESSAGE value="Schermata iniziale" />
     <MESSAGE value="Aggiunta animazione e inizio scrittura login" />
-    <option name="LAST_COMMIT_MESSAGE" value="Aggiunta animazione e inizio scrittura login" />
+    <MESSAGE value="Creazione email e password textfield" />
+    <option name="LAST_COMMIT_MESSAGE" value="Creazione email e password textfield" />
   </component>
   <component name="XSLT-Support.FileAssociations.UIState">
     <expand />
Index: lib/components/custom_text_form_field.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/components/custom_text_form_field.dart b/lib/components/custom_text_form_field.dart
new file mode 100644
--- /dev/null	(date 1699102798686)
+++ b/lib/components/custom_text_form_field.dart	(date 1699102798686)
@@ -0,0 +1,63 @@
+import 'package:flutter/material.dart';
+
+class CustomTextFormField extends StatelessWidget {
+  const CustomTextFormField({
+    required this.textInputAction,
+    required this.labelText,
+    required this.keyboardType,
+    required this.controller,
+    super.key,
+    this.onChanged,
+    this.validator,
+    this.obscureText,
+    this.suffixIcon,
+    this.onEditingComplete,
+    this.autofocus,
+    this.focusNode,
+  });
+
+  final void Function(String)? onChanged;
+  final String? Function(String?)? validator;
+  final TextInputAction textInputAction;
+  final TextInputType keyboardType;
+  final TextEditingController controller;
+  final bool? obscureText;
+  final Widget? suffixIcon;
+  final String labelText;
+  final bool? autofocus;
+  final FocusNode? focusNode;
+  final void Function()? onEditingComplete;
+
+  @override
+  Widget build(BuildContext context) {
+    return TextFormField(
+      controller: controller,
+      keyboardType: keyboardType,
+      textInputAction: textInputAction,
+      focusNode: focusNode,
+      onChanged: onChanged,
+      autofocus: autofocus ?? false,
+      validator: validator,
+      obscureText: obscureText ?? false,
+      obscuringCharacter: '*',
+      onEditingComplete: onEditingComplete,
+      decoration: InputDecoration(
+        border: OutlineInputBorder(
+          borderRadius: BorderRadius.circular(30),
+          borderSide: const BorderSide(color: Colors.black, width: 2),
+        ),
+        labelStyle: const TextStyle(
+          color: Colors.blueGrey,
+          fontSize: 20,
+          fontWeight: FontWeight.w500,
+        ),
+        suffixIcon: suffixIcon,
+        labelText: labelText,
+        floatingLabelBehavior: FloatingLabelBehavior.never,
+        fillColor: Colors.white,
+        filled: true,
+      ),
+      onTapOutside: (event) => FocusScope.of(context).unfocus(),
+    );
+  }
+}
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"FrameworkDetectionExcludesConfiguration\">\r\n    <type id=\"android\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_21\" project-jdk-name=\"Android API 33, extension level 3 Platform\" project-jdk-type=\"Android SDK\" />\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"jpab\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision d5774563c123c17a5eb27caaafa39ae8768c4464)
+++ b/.idea/misc.xml	(date 1699093198594)
@@ -1,4 +1,3 @@
-<?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="FrameworkDetectionExcludesConfiguration">
     <type id="android" />
